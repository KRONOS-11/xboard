- forked off original project
- proper javascript object oriented design, object literal notation, proper namespacing, separation
- describe animation
    - difficulties in scrubbing because time does not hold state of board, it needs to be recreated, so jumping aaround means popping/adding drawing
    - naive implementation, going back just redraws everything up to the point you want, performance should be good enough.

- timing issues were difficult, set in timeouts. 
- storage in json


- simplest UI for adding transcript, when paused you add text. specify start/end time
- managing all events
- RECORDING -> update max time, disable slider
- PLAYBACK -> disable drawing, disable buttons, update elapsed time, transcript update
- PAUSED -> can select buttons, add transcript

clicking Add Transcript 

- limit to size of storage? param?


- separation of UI and logic components between Wb and WbUI



- notion of playing/pausing playback, save state of playback.
- update clock when you scrub.


how timing works
- RECORDING: clockInterval set for setClock, every 500ms. in setClock, getRecordingTime() is called, which updates every 500ms, so it keeps going even if events stop
- PLAYBACK: incrementing clock updates every 500ms, stopped when it exceeds recordingtime... update clock timers when you click DURING playback.


- we assume that the redraw is fast enough, (show performance metric?)
- binary search over times to find closest event?
- a level of non-precision, but happens quick enough it seems like we can ignore it at this scale assuming a decently modern browser/computer...
- clear all option


- BIG STATE MACHINE of events, actions, etc. 

- constraining the problem and set of possible actions helped simplify things. disable everything when not in record mode.
- single threaded nature of javascript, clocks, not precise, but close enough.
- set interval blocking vs settimeout

- BUG: canvas connects tsrokes sometimes
- when scrolling while playing, we must pause while in the scrolling state, then only start playback again when the slider is stopped. otherwise leads to weird bugs
- when scrub to start of video, it jumps to end and back
- stop playback when we have grabbed the handle

BAD BUG:
- connecting paths when jumping around becasue path doesnt get closed

IMPROVEMENTS

- something like backbone.js


// TODO
- moving playback to beginning locks up.
- fix stroke bug
- tooltip on changing slider
- remove slider JS clutter
- disable palette on not-record
- CSS
- stroke size
- color
- eraser size
- jump to end when move to start
- redo stroke color at beginning
- firefox timeout http://benalman.com/news/2009/07/the-mysterious-firefox-settime/
- style
- need some sort of authentication to be able to record

- check save/load from JSON
- compression http://web-resource-optimization.blogspot.com/2011/06/json-compression-algorithms.html
https://github.com/WebReflection/JSONH
- make embeddable
- switches for create/embed mode

- better comments
- clean up code

- make type names shorter
- loading image?

- cjson http://stevehanov.ca/blog/index.php?id=104, JSONH had difficulties with nesting of objects

// CURR BUGS
- change handlers to mouseUp?
- record, swithc strokes/tool. playback halfway, click record, hangs
- check erase working properly
- cursor in chrome

// want an embed like youtube for playback. based in an iframe. but for recording, need the full code to embe

http://laktek.com/2008/10/27/really-simple-color-picker-in-jquery/

- generating unique URL, 11 string random

